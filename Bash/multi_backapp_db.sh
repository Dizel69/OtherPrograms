#!/bin/bash

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===

# –°–ø–∏—Å–æ–∫ –±–∞–∑ –¥–ª—è –±—ç–∫–∞–ø–∞
DATABASES=("firs" "second" "third")

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å PostgreSQL
DB_USER="postgres"
export PGPASSWORD="postgres"

# –•–æ—Å—Ç –∏ –ø–æ—Ä—Ç
DB_HOST="localhost"
DB_PORT="5432"

# –î–∞—Ç–∞
DATE_STR=$(date +'%Y%m%d')

# –ö–∞—Ç–∞–ª–æ–≥–∏
BACKUP_DIR="/home/backups/postgresql/$DATE_STR"
LOG_DIR="/home/backups/logs"
LOG_FILE="$LOG_DIR/backup_$DATE_STR.log"

# –ö–æ–ª-–≤–æ –¥–Ω–µ–π –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è
RETENTION_DAYS=3

# === –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ ===

mkdir -p "$BACKUP_DIR" "$LOG_DIR"
if [ $? -ne 0 ]; then
  echo "‚ò†Ô∏è ERROR: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥–∏:"
  echo "    $BACKUP_DIR"
  echo "    $LOG_DIR"
  exit 1
fi

echo "üïì $(date +'%F %T') –ù–∞—á–∏–Ω–∞–µ–º backup –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö..." | tee -a "$LOG_FILE"

# === –ë—ç–∫–∞–ø –∫–∞–∂–¥–æ–π –±–∞–∑—ã ===

for DB_NAME in "${DATABASES[@]}"; do
  BACKUP_FILE="$BACKUP_DIR/${DB_NAME}_${DATE_STR}.sql.gz"
  echo "----> –ë—ç–∫–∞–ø –±–∞–∑—ã: $DB_NAME" | tee -a "$LOG_FILE"
  
  pg_dump -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" "$DB_NAME" | gzip > "$BACKUP_FILE" 2>> "$LOG_FILE"
  
  if [ ${PIPESTATUS[0]} -eq 0 ]; then
    echo "üíæ $(date +'%F %T') Backup —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ $BACKUP_FILE" | tee -a "$LOG_FILE"
  else
    echo "‚ò†Ô∏è ERROR: pg_dump –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è. –°–º–æ—Ç—Ä–∏ –¥–µ—Ç–∞–ª–∏ –≤ $LOG_FILE" | tee -a "$LOG_FILE"
  fi
done

# === –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ ===

echo "üîß $(date +'%F %T') –£–¥–∞–ª—è–µ–º backups —Å—Ç–∞—Ä—à–µ —á–µ–º ${RETENTION_DAYS} –¥–Ω—è..." | tee -a "$LOG_FILE"
find "$BACKUP_DIR" -type f -name "${DB_NAME}_*.sql.gz" -mtime +$RETENTION_DAYS -print -delete >> "$LOG_FILE" 2>&1
echo "üîß $(date +'%F %T') –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞." | tee -a "$LOG_FILE"
find "home/backups/postgresql" -type d -mtime +$RETENTION_DAYS -exec rm -rf {} \; >> "$LOG_FILE" 2>&1

echo "‚ù§Ô∏è $(date +'%F %T') Backup —Å–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ. –õ–æ–≥: $LOG_FILE" | tee -a "$LOG_FILE"